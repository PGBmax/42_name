NAME = libft.a

SOURCES = Libft/ft_isalpha.c Libft/ft_isdigit.c Libft/ft_isalnum.c Libft/ft_isascii.c Libft/ft_isprint.c Libft/ft_strlen.c Libft/ft_memset.c \
		Libft/ft_bzero.c Libft/ft_memcpy.c Libft/ft_memmove.c Libft/ft_strlcpy.c Libft/ft_strlcat.c Libft/ft_toupper.c Libft/ft_tolower.c \
		Libft/ft_strchr.c Libft/ft_strrchr.c Libft/ft_strncmp.c Libft/ft_memchr.c Libft/ft_memcmp.c Libft/ft_strnstr.c Libft/ft_atoi.c Libft/ft_calloc.c Libft/ft_strdup.c \
		Libft/ft_substr.c Libft/ft_strjoin.c Libft/ft_putchar_fd.c Libft/ft_putendl_fd.c Libft/ft_putstr_fd.c Libft/ft_putnbr_fd.c \
		Libft/ft_itoa.c Libft/ft_strmapi.c Libft/ft_striteri.c Libft/ft_strtrim.c Libft/ft_split.c

BONUS = Libft/ft_lstnew_bonus.c Libft/ft_lstadd_front_bonus.c Libft/ft_lstsize_bonus.c Libft/ft_lstlast_bonus.c Libft/ft_lstadd_back_bonus.c \
		Libft/ft_lstdelone_bonus.c Libft/ft_lstclear_bonus.c Libft/ft_lstiter_bonus.c Libft/ft_lstmap_bonus.c

SOURCESALL = $(SOURCES) $(BONUS)

OBJECTS = $(SOURCES:.c=.o)

OBJECTSALL = $(SOURCESALL:.c=.o)
CC = cc
CFLAGS = -Wall -Werror -Wextra

all: $(NAME)
	@printf "\rCompiled mandatory ‚úÖ"

BAR_LENGTH := 20
ifeq ($(MAKECMDGOALS),bonus)
	TOTAL_FILES := $(words $(SOURCESALL))
else
	TOTAL_FILES := $(words $(SOURCES))
endif
COMPILED_FILES := 0

scorpionem :
	@printf "\033[0;34m"
	@echo " ‚ñó‚ñÑ‚ñÑ‚ññ‚ñó‚ñû‚ñÄ‚ñò ‚ñÑ‚ñÑ‚ñÑ   ‚ñÑ‚ñÑ‚ñÑ ‚ñÑ‚ñÑ‚ñÑ‚ñÑ  ‚ñÑ  ‚ñÑ‚ñÑ‚ñÑ  ‚ñÑ‚ñÑ‚ñÑ‚ñÑ  ‚ñó‚ñû‚ñÄ‚ñö‚ññ‚ñÑ‚ñÑ‚ñÑ‚ñÑ"
	@echo "‚ñê‚ñå   ‚ñù‚ñö‚ñÑ‚ññ‚ñà   ‚ñà ‚ñà    ‚ñà   ‚ñà ‚ñÑ ‚ñà   ‚ñà ‚ñà   ‚ñà ‚ñê‚ñõ‚ñÄ‚ñÄ‚ñò‚ñà ‚ñà ‚ñà"
	@echo " ‚ñù‚ñÄ‚ñö‚ññ    ‚ñÄ‚ñÑ‚ñÑ‚ñÑ‚ñÄ ‚ñà    ‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñÄ ‚ñà ‚ñÄ‚ñÑ‚ñÑ‚ñÑ‚ñÄ ‚ñà   ‚ñà ‚ñù‚ñö‚ñÑ‚ñÑ‚ññ‚ñà   ‚ñà "
	@echo "‚ñó‚ñÑ‚ñÑ‚ñû‚ñò               ‚ñà     ‚ñà                        "
	@printf "\033[0m"

%.o : %.c
	@$(eval COMPILED_FILES := $(shell echo $$(($(COMPILED_FILES) + 1))))
	@$(eval PROGRESS_PERCENT := $(shell echo $$(($(COMPILED_FILES) * 100 / $(TOTAL_FILES)))))
	@$(eval FILLED_BAR_LENGTH := $(shell echo $$(($(PROGRESS_PERCENT) * $(BAR_LENGTH) / 100))))
	@printf "\rCompiling [\033[0;32m"
	@for i in $(shell seq 1 $(FILLED_BAR_LENGTH)); do printf "‚ó¶"; done
	@printf "üü°"
	@for i in $(shell seq 1 $(shell echo $$(($(BAR_LENGTH) - $(FILLED_BAR_LENGTH))))); do printf "‚Ä¢"; done
	@printf "\033[0m] $(PROGRESS_PERCENT)%%"
	@$(CC) $(CFLAGS) -c $< -o $@

$(NAME): $(OBJECTS)
		@ar rcs $(NAME) $(OBJECTS)

bonus: $(OBJECTSALL)
		@ar rcs $(NAME) $(OBJECTSALL)
		@printf "\rCompiled bonus ‚úÖ"

clean:
		@rm -f $(OBJECTS) $(OBJECTSALL)
		@printf "Cleaned objects ‚úÖ\n"

fclean: clean
		@rm -f $(NAME)
		@printf "Cleaned everything ‚úÖ\n"

re: fclean all

.PHONY: all bonus clean fclean re scorpionem

